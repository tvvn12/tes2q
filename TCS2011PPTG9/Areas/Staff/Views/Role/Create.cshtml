@model Microsoft.AspNetCore.Identity.IdentityRole

@{
    ViewData["Title"] = "Create Role";
}

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a asp-area="" asp-controller="Home" asp-action="Index">Home</a>
        </li>
        <li class="breadcrumb-item">
            <a asp-action="Index">Role Index</a>
        </li>
        <li class="breadcrumb-item active" aria-current="page">@ViewData["Title"]</li>
    </ol>
</nav>

<div class="container">
    <h5 class="mt-4 mb-4 text-center">@ViewData["Title"]</h5>

    <div class="row">
        <form asp-action="Create" class="col-12 col-lg-8 offset-lg-2 col-xl-6 offset-xl-3 pr-0 pl-0">
            <div class="text-center">
                <a asp-action="Index" class="btn btn-success">Back</a>
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>

            <div asp-validation-summary="ModelOnly" class="text-danger mt-5"></div>

            <div class="form-group mt-5">
                <label asp-for="Id" class="control-label"></label>
                <input asp-for="Id" class="form-control" />
                <span asp-validation-for="Id" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
        </form>
    </div>
</div>

@section Scripts { @{await Html.RenderPartialAsync("_ValidationScriptsPartial");} }